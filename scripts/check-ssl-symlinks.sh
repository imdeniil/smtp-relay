#!/bin/bash

#########################################
# SSL Symlinks Health Check
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å SSL —Å–∏–º–ª–∏–Ω–∫–æ–≤
#########################################

set -e

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –ü–æ–ª—É—á–∞–µ–º –¥–æ–º–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
RELAY_MYDOMAIN="${RELAY_MYDOMAIN:-keemor.su}"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º volume –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
CERT_VOLUME=""
if docker ps | grep -q nginx-proxy; then
    CERT_VOLUME=$(docker inspect nginx-proxy --format '{{range .Mounts}}{{if eq .Destination "/etc/nginx/certs"}}{{.Name}}{{end}}{{end}}' 2>/dev/null)
fi

if [ -z "$CERT_VOLUME" ]; then
    echo -e "${YELLOW}nginx-proxy –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º volume 'certs' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é${NC}"
    CERT_VOLUME="certs"
fi

CERT_PATH="/var/lib/docker/volumes/${CERT_VOLUME}/_data"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏
if [ ! -d "$CERT_PATH" ]; then
    echo -e "${RED}‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $CERT_PATH${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞ —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏ –¥–æ–º–µ–Ω–∞
if [ ! -d "$CERT_PATH/$RELAY_MYDOMAIN" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è $RELAY_MYDOMAIN –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã${NC}"
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
REQUIRED_FILES=(
    "$CERT_PATH/$RELAY_MYDOMAIN/fullchain.pem"
    "$CERT_PATH/$RELAY_MYDOMAIN/key.pem"
    "$CERT_PATH/$RELAY_MYDOMAIN/chain.pem"
)

MISSING_FILES=0
for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file${NC}"
        MISSING_FILES=$((MISSING_FILES + 1))
    fi
done

if [ $MISSING_FILES -gt 0 ]; then
    echo -e "${RED}‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç $MISSING_FILES —Ñ–∞–π–ª–æ–≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–º–ª–∏–Ω–∫–∏
SYMLINKS_OK=1

check_symlink() {
    local link_name=$1
    local target=$2

    if [ -L "$CERT_PATH/$link_name" ]; then
        local current_target=$(readlink "$CERT_PATH/$link_name")
        if [ "$current_target" = "$target" ]; then
            echo -e "${GREEN}‚úì${NC} $link_name -> $target"
            return 0
        else
            echo -e "${YELLOW}‚ö†${NC}  $link_name —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ $current_target (–æ–∂–∏–¥–∞–µ—Ç—Å—è $target)"
            return 1
        fi
    else
        echo -e "${RED}‚úó${NC} $link_name –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        return 1
    fi
}

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–∏–º–ª–∏–Ω–∫–æ–≤ –¥–ª—è $RELAY_MYDOMAIN..."
echo ""

if ! check_symlink "${RELAY_MYDOMAIN}.crt" "./${RELAY_MYDOMAIN}/fullchain.pem"; then
    SYMLINKS_OK=0
fi

if ! check_symlink "${RELAY_MYDOMAIN}.key" "./${RELAY_MYDOMAIN}/key.pem"; then
    SYMLINKS_OK=0
fi

if ! check_symlink "${RELAY_MYDOMAIN}.chain.pem" "./${RELAY_MYDOMAIN}/chain.pem"; then
    SYMLINKS_OK=0
fi

if ! check_symlink "${RELAY_MYDOMAIN}.dhparam.pem" "./dhparam.pem"; then
    SYMLINKS_OK=0
fi

echo ""

if [ $SYMLINKS_OK -eq 0 ]; then
    echo -e "${RED}‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏–º–ª–∏–Ω–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã${NC}"
    echo -e "${YELLOW}üìù –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./manage.sh fix-ssl-symlinks${NC}"
    exit 1
else
    echo -e "${GREEN}‚úÖ –í—Å–µ SSL —Å–∏–º–ª–∏–Ω–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã${NC}"
    exit 0
fi
